# Publish wrench ----------------------------------
xbt_force_torque_sensor_controller:
  type: force_torque_sensor_controller/LowPassForceTorqueSensorController  # Specify the controller type as LowPassForceTorqueSensorController
  name: wrench  # Specify the name of the force torque sensor interface to be published
  low_pass_filter_coeff: 500 # coefficient for filter strength, higher value -> more filtering 
  publish_rate: &loop_hz 500

cartesian_compliance_controller_follow_trajectory:
  type: "velocity_controllers/CartesianComplianceController"
  end_effector_link: "tcp_link"
  robot_base_link: "base_link"
  ft_sensor_ref_link: "wrist_3_link"
  compliance_ref_link: "tcp_link"
  target_frame_topic: "target_frame"
  joints: &robot_joints
    - shoulder_pan_joint
    - shoulder_lift_joint
    - elbow_joint
    - wrist_1_joint
    - wrist_2_joint
    - wrist_3_joint  

  hand_frame_control: true

  stiffness: # w.r.t. compliance_ref_link
    trans_x: 200
    trans_y: 200
    trans_z: 200
    rot_x: 20
    rot_y: 20
    rot_z: 20

  solver:
    error_scale: 0.3

  pd_gains:
    trans_x: { p: 0.2 }
    trans_y: { p: 0.2 }
    trans_z: { p: 0.2 }
    rot_x: { p: 2.0 }
    rot_y: { p: 2.0 }
    rot_z: { p: 2.0 }

cartesian_compliance_controller_find_surface:
  type: "velocity_controllers/CartesianComplianceController"
  end_effector_link: "tcp_link"
  robot_base_link: "base_link"
  ft_sensor_ref_link: "wrist_3_link"
  compliance_ref_link: "tcp_link"
  target_frame_topic: "target_frame"
  joints: *robot_joints

  hand_frame_control: true

  stiffness: # w.r.t. compliance_ref_link
    trans_x: 0
    trans_y: 200
    trans_z: 200
    rot_x: 20
    rot_y: 20
    rot_z: 20

  solver:
    error_scale: 0.03

  pd_gains:
    trans_x: { p: 0.2 }
    trans_y: { p: 0.2 }
    trans_z: { p: 0.2 }
    rot_x: { p: 2.0 }
    rot_y: { p: 2.0 }
    rot_z: { p: 2.0 }